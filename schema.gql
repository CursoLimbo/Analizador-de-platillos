# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

"""The additional spot model"""
type AdditionalSpot {
  id: ID!
  name: String!
  value: String!
}

input AdditionalSpotType {
  id: ID
  name: String!
  value: String!
}

"""The bank account model"""
type BankAccount {
  accountNumber: String!
  bank: String!
  id: ID!
  owner: String!
}

input BankAccountType {
  accountNumber: String!
  bank: String!
  id: ID
  owner: String!
}

"""The catalogue model"""
type Catalogue {
  date: DateTime!
  file: String!
  id: ID!
  name: String!
}

input CatalogueType {
  file: String!
  id: ID
  name: String!
}

"""The client model"""
type Client {
  email: String!
  id: ID!
  location: String!
  name: String!
  phone: String!
  whatsapp: String!
}

input ClientType {
  email: String!
  id: ID
  location: String!
  name: String!
  phone: String!
  whatsapp: String!
}

"""The company model"""
type Company {
  email: String!
  id: ID!
  logo: String!
  name: String!
  phone: String!
}

input CompanyType {
  email: String!
  id: ID
  logo: String!
  name: String!
  phone: String!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

"""The discount model"""
type Discount {
  description: String!
  id: ID!
  name: String!
  percentage: Float!
}

input DiscountType {
  description: String!
  id: ID
  name: String!
  percentage: Float!
}

"""The ingredient model"""
type Ingredient {
  costPerGram: Float!
  id: ID!
  mermado: Float!
  name: String!
  perfomancePercentage: Float!
  performance: Float!
  presentation: Float!
  productMultiplyByTwo: Float!
  supplier: String!
}

input IngredientType {
  costPerGram: Float!
  id: ID
  mermado: Float!
  name: String!
  performance: Float!
  performancePercentage: Float!
  presentation: Float!
  productMultiplyByTwo: Float!
  supplier: String!
}

"""The manager model"""
type Manager {
  bankAccounts: [String!]!
  email: String!
  id: ID!
  name: String!
  phone: String!
  photo: String!
  whatsapp: String!
}

input ManagerType {
  bankAccounts: [String!]!
  email: String!
  id: ID
  name: String!
  phone: String!
  photo: String!
  whatsapp: String!
}

type Mutation {
  CreateAdditionalSpot(newAdditionalSpot: AdditionalSpotType!): AdditionalSpot!
  CreateCatalogue(newCatalogue: CatalogueType!): Catalogue!
  CreateCompany(newCompany: CompanyType!): Company!
  CreateDiscount(newDiscount: DiscountType!): Discount!
  CreateIngredient(newIngredient: IngredientType!): Ingredient!
  CreateManager(newManager: ManagerType!): Manager!
  CreateQuotation(newQuotation: QuotationType!): Quotation!
  CreateRecipe(newRecipe: RecipeType!): Recipe!
  CreateSupplier(newSupplier: SupplierType!): Supplier!
  CreateTypeOfQuote(newTypeOfQuote: TypeOfQuoteType!): TypeOfQuote!
  createBankAccount(newBankAccount: BankAccountType!): BankAccount!
  createClient(newClient: ClientType!): Client!
  deleteAdditionalSpot(id: String!): String!
  deleteBankAccount(id: String!): String!
  deleteCatalogue(id: String!): String!
  deleteClient(id: String!): String!
  deleteDiscount(id: String!): String!
  deleteIngredient(id: String!): String!
  deleteQuotation(id: String!): String!
  deleteRecipe(id: String!): String!
  deleteSupplier(id: String!): String!
  deleteTypeOfQuote(id: String!): String!
  updateAdditionalSpot(updateAdditionalSpot: AdditionalSpotType!): AdditionalSpot!
  updateBankAccount(updateBankAccount: BankAccountType!): BankAccount!
  updateCatalogue(updateCatalogue: CatalogueType!): Catalogue!
  updateClient(updateClient: ClientType!): Client!
  updateCompany(updateCompany: CompanyType!): Company!
  updateDiscount(updateDiscount: DiscountType!): Discount!
  updateIngredient(updateIngredient: IngredientType!): Ingredient!
  updateManager(updateManager: ManagerType!): Manager!
  updateQuotation(updateQuotation: QuotationType!): Quotation!
  updateRecipe(updateQuotation: RecipeType!): Recipe!
  updateSupplier(updateSupplier: SupplierType!): Supplier!
  updateTypeOfQuote(updateTypeOfQuote: TypeOfQuoteType!): TypeOfQuote!
}

type Query {
  """Get list of additional spots"""
  GetALlAdditionalSpot: [AdditionalSpot!]!
  GetAdditionalSpot(id: String!): AdditionalSpot!

  """Get list of bank accounts"""
  GetAllBankAccount: [BankAccount!]!

  """Get List of catalogues"""
  GetAllCatalogues: [Catalogue!]!

  """Get List of discounts"""
  GetAllClients: [Discount!]!

  """Get List of Ingredients"""
  GetAllIngredients: [Ingredient!]!

  """Get List of Quotations"""
  GetAllQuotations: [Quotation!]!

  """Get List of Recipes"""
  GetAllRecipes: [Recipe!]!

  """Get List of Suppliers"""
  GetAllSuppliers: [Supplier!]!

  """Get List of TypeOfQuotes"""
  GetAllTypeOfQuotes: [TypeOfQuote!]!
  GetBankAccount(id: String!): BankAccount!

  """Get List of clients"""
  getAllClients: [Client!]!
  getCatalogue(id: String!): Catalogue!
  getClient(id: String!): Client!
  getCompany(id: String!): Company!
  getDiscount(id: String!): Discount!
  getIngredient(id: String!): Ingredient!
  getManager(id: String!): Manager!
  getQuotation(id: String!): Quotation!
  getRecipe(id: String!): Recipe!
  getSupplier(id: String!): Supplier!
  getTypeOfQuote(id: String!): TypeOfQuote!
}

"""The quotation model"""
type Quotation {
  amountOfPeople: Float!
  bankAccounts: [String!]!
  client: String!
  code: String!
  company: String!
  date: String!
  develop: String!
  discount: Float!
  id: ID!
  recipes: [String!]!
  total: Float!
  typeOfQuotation: String!
}

input QuotationType {
  amountOfPeople: Float!
  bankAccounts: [String!]!
  client: String!
  code: String!
  company: String!
  date: String!
  develop: String!
  discount: Float
  id: ID
  recipes: [String!]!
  total: Float!
  typeOfQuotation: String!
}

"""The recipe model"""
type Recipe {
  PercentageInflation: Float!
  id: ID!
  ingredients: [String!]!
  name: String!
  procedure: String!
  revenue: Float!
  salesTax: Float!
  serviceTax: Float!
  totalCostPerQuantity: Float!
  unitCost: Float!
  utilities: Float!
}

input RecipeType {
  PercentageInflation: Float!
  id: ID
  ingredients: [String!]!
  name: String!
  procedure: String!
  revenue: Float!
  salesTax: Float!
  serviceTax: Float!
  totalCostPerQuantity: Float!
  unitCost: Float!
  utilities: Float!
}

"""The supplier model"""
type Supplier {
  id: ID!
  location: String!
  name: String!
  phone: String!
}

input SupplierType {
  id: ID
  location: String!
  name: String!
  phone: String
}

"""The type of quote model"""
type TypeOfQuote {
  TermsConditions: String!
  additionalSpots: [String!]!
  developmentTemplate: String!
  id: ID!
  name: String!
}

input TypeOfQuoteType {
  TermsConditions: String!
  additionalSpots: [String!]!
  developmentTemplate: String!
  id: ID
  name: String!
}
